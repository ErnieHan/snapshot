{"version":3,"sources":["pages/About.js","App.js","serviceWorker.js","index.js"],"names":["About","state","isLoading","color","componentDidMount","setTimeout","_this","handleChange","setState","_this2","this","react_default","a","createElement","lib_default","name","content","style","textAlign","background","onClick","React","Component","Index","className","property","Users","Page404","App","BrowserRouter","basename","process","Link","to","Switch","console","log","Route","path","exact","component","Boolean","window","location","hostname","match","rootElement","document","getElementById","hasChildNodes","hydrate","src_App","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.27963594.chunk.js","sourcesContent":["import React from \"react\";\r\nimport MetaTags from \"react-meta-tags\";\r\n\r\nclass About extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    color: \"pink\"\r\n  };\r\n  componentDidMount = () => {\r\n    setTimeout(this.handleChange, 2000);\r\n  };\r\n  handleChange = () => {\r\n    this.setState({\r\n      isLoading: false\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MetaTags>\r\n          <title>About | Ernie's Website</title>\r\n          <meta\r\n            name=\"description\"\r\n            content=\"有沒有出現我有沒有出現我有沒有出現我有沒有出現我\"\r\n          />\r\n        </MetaTags>\r\n        {this.state.isLoading && (\r\n          <h1 style={{ textAlign: \"center\" }}>LOADING</h1>\r\n        )}\r\n        ABOUT\r\n        <button\r\n          style={{ background: this.state.color }}\r\n          onClick={() =>\r\n            this.setState({\r\n              color: \"lightblue\"\r\n            })\r\n          }\r\n        >\r\n          Change\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport MetaTags from \"react-meta-tags\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport About from \"./pages/About\";\n\nfunction Index() {\n  return (\n    <div className=\"App\">\n      <MetaTags>\n        <title>Home | Ernie's Website</title>\n        <meta\n          name=\"description\"\n          content=\"有沒有出現我有沒有出現我有沒有出現我有沒有出現我\"\n        />\n        <meta property=\"og:title\" content=\"MyApp\" />\n        <meta property=\"og:image\" content=\"path/to/image.jpg\" />\n      </MetaTags>\n      <h1>HELLO EVERYONE!!!</h1>\n    </div>\n  );\n}\n\nfunction Users() {\n  return (\n    <h2>\n      <MetaTags>\n        <title>USER</title>\n        <meta name=\"description\" content=\"USERUSERUSERUSER\" />\n        <meta property=\"og:title\" content=\"MyApp\" />\n        <meta property=\"og:image\" content=\"path/to/image.jpg\" />\n      </MetaTags>\n      Users\n    </h2>\n  );\n}\n\nfunction Page404() {\n  return (\n    <h1>\n      <MetaTags>\n        <title>PAGE404</title>\n        <meta name=\"description\" content=\"PAGE404PAGE404PAGE404\" />\n        <meta property=\"og:title\" content=\"MyApp\" />\n        <meta property=\"og:image\" content=\"path/to/image.jpg\" />\n      </MetaTags>\n      PAGE404\n    </h1>\n  );\n}\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/about/\">About</Link>\n            </li>\n            <li>\n              <Link to=\"/users/\">Users</Link>\n            </li>\n          </ul>\n        </nav>\n        <Switch>\n          {console.log(\"process.env.PUBLIC_URL\", process.env.PUBLIC_URL)}\n          <Route path=\"/\" exact component={Index} />\n          <Route path=\"/about/\" component={About} />\n          <Route path=\"/users/\" component={Users} />\n          <Route component={Page404} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\n// import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { hydrate, render } from \"react-dom\";\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}